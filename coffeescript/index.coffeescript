class Form
  constructor: () ->
    @tlLogo = new TimelineMax {repeat:false, yoyo:true}
    @tlStep = new TimelineMax()
  
  i: ->
    do @handlers
    do @strokeAnimation
  
  handlers: ->
    _t = @
    
    $('.screen__inner').on 'mousemove', (ev) =>
     @formTransform ev
    
    $('.btn.btn-db').on 'click', (ev) =>
     @nextStep ev, '.step--two'
    
    $('.btn-single').on 'click', (ev) =>
     @nextStep ev, '.step--one'
    
    $('.input__field').on 'change', ->
     _t.floatLabel @
  
  formTransform: (e) ->
    x = e.pageX - $('.stage').position().left
    y = e.pageY - $('.stage').position().top
    dx = $('.stage').innerWidth()/2 - x
    dy = $('.stage').innerHeight()/2 - y
    dxp = dx/($('.stage').innerWidth()/2)
    dyp = dy/($('.stage').innerHeight()/2)
    
    newTransformRotateXY = "rotateY(" + -15*Math.tan(dxp) + "deg) rotateX(" + +2*Math.tan(dyp) + "deg)";
    
    $('.screen').css {'-webkit-transform': newTransformRotateXY}
   
  strokeAnimation: ->
    shapes = $ 'circle, path'
    
    @tlLogo.staggerFromTo '.step--one', .5, {opacity: 0}, {opacity: 1}
    @tlLogo.staggerFromTo shapes, 1, {drawSVG: 0}, {drawSVG: '100%'}
   
  nextStep: (ev, nextScreen) ->
    _t = @
    $overlay = $ '.step-overlay'
    $stage = $ '.stage'
    
    newElement = document.createElementNS "http://www.w3.org/2000/svg", 'circle'
    $overlay[0].appendChild newElement
    $overlay.show()
    trfOffset = 40

    @tlStep.set(newElement, {
      attr:
        fill: '#8C44D1'
        cx: "#{(ev.pageX/$stage.outerWidth())*100}%"
        cy: "#{((ev.pageY+trfOffset)/$stage.outerHeight())*100}%"
        r: 0
    })
    .to(newElement, .5, {
      attr:
        r: $stage.outerHeight()
      transformOrigin:"center center"
      ease: Power4.easeInOut
      onComplete: ->
        _t.showScreen nextScreen
        _t.tlLogo.restart()
    })
    .to(newElement, .5, {
      css:
        opacity: 0
      onComplete: ->
        do newElement.remove
        $overlay.hide()
    })
  
  showScreen: (step) ->
    $('.step').removeClass 'show'
    $nextStep = $('.step').filter step
    $nextStep.addClass 'show'
   
  floatLabel: (el) ->
    val = $(el).val().length
    $inp = $(el).closest '.input'
    if val then $inp.addClass 'float-label' else $inp.removeClass 'float-label'

f = new Form()
do f.i
  
    
      